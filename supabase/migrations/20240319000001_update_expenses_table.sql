-- First, create the expense_categories table if it doesn't exist
CREATE TABLE IF NOT EXISTS public.expense_categories (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Insert default categories if they don't exist
INSERT INTO public.expense_categories (name, description) VALUES
    ('office_supplies', 'Office supplies and stationery'),
    ('equipment', 'Equipment and hardware'),
    ('travel', 'Travel and transportation'),
    ('marketing', 'Marketing and advertising'),
    ('software', 'Software and subscriptions'),
    ('utilities', 'Utilities and bills'),
    ('rent', 'Rent and facilities'),
    ('other', 'Other expenses')
ON CONFLICT (name) DO NOTHING;

-- Add category_id column to expenses table
ALTER TABLE public.expenses 
    ADD COLUMN IF NOT EXISTS category_id BIGINT REFERENCES public.expense_categories(id) ON DELETE SET NULL;

-- Create index for category_id if it doesn't exist
CREATE INDEX IF NOT EXISTS idx_expenses_category_id ON public.expenses(category_id);

-- Migrate existing category data
WITH category_mapping AS (
    SELECT e.id as expense_id, ec.id as category_id
    FROM public.expenses e
    LEFT JOIN public.expense_categories ec ON e.category = ec.name
)
UPDATE public.expenses e
SET category_id = cm.category_id
FROM category_mapping cm
WHERE e.id = cm.expense_id
AND e.category_id IS NULL; 